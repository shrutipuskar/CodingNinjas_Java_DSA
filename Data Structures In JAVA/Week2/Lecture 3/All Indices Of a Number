/*Problem statement
Given an array of length N and an integer x, you need to find all the indexes where x is present in the input array. Save all the indexes in the output array (in increasing order).

Do this recursively. Indexing in the array starts from 0.

Hint:
Try making a helper function with the required arguments and call the helper function from the allIndexes function.
Detailed explanation ( Input/output format, Notes, Images )
Input Format :
Line 1 : An Integer N i.e. size of array
Line 2 : N integers which are elements of the array, separated by spaces
Line 3 : Integer x
Output Format :
Return all the indexes in the output array (in increasing order).
Constraints :
1 <= N <= 10^3
Sample Input :
5
9 8 10 8 8
8
Sample Output :
1 3 4*/

import java.util.Arrays;

public class Solution {

    private static int[] allIndexes(int input[], int x, int ans[], int startIndex) {
        if (startIndex >= input.length) {
            return ans;
        }

        if (input[startIndex] == x) {
           // ans = Arrays.copyOf(ans, ans.length + 1);
		   int newArray[]=new int[ans.length+1];
		   for(int i=0;i<ans.length;i++)
		   		newArray[i]=ans[i];
			ans=newArray;	
            ans[ans.length - 1] = startIndex;
        }

        return allIndexes(input, x, ans, startIndex + 1);
    }

    public static int[] allIndexes(int input[], int x) {
        int ans[] = {};
        return allIndexes(input, x, ans, 0);
    }
}
